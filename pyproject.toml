[project]
name = "fast-micro-service"
description = "FastApi Start Kit"
authors  = [
    { name = "phoenix", email = "hypofiasco@gmail.co" },
]
requires-python = ">=3.11.0"
dynamic = [ "version", "dependencies" ]


[build-system]
requires = [
    "poetry>=1.5.1",
]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
version = "0.1.0"
package-mode = false

[tool.poetry.dependencies]
python = ">=3.11.0,<4.0"
fastapi = "0.115.12"
python-multipart = "0.0.20"
starlette-context = "0.4.0"
pydantic-settings = "2.8.1"
orjson = "3.10.16"
httpx = "0.28.1"
pycryptodomex = "3.22.0"
passlib = "1.7.4"
bcrypt = "4.3.0"
gunicorn = "23.0.0"
uvicorn = { extras = ["standard"], version = "0.34.0" }
tortoise-orm = { extras = ["aiomysql"], version = "0.24.2" }
aerich = { extras = ["toml"], version = "0.8.2" }
python-jose = { extras = ["cryptography"], version = "3.4.0" }
redis = "5.2.1"
cachetools = "5.5.2"
loguru = "0.7.3"
python-ulid = "3.0.0"
captcha = "0.6.0"
pyinstrument = "5.0.0"

oss2 = { version = "2.19.1", optional = true}
ipython = { version = "8.15.0", optional = true }
sentry-sdk = { extras = ["fastapi"], version = "2.5.1", optional = true }

[project.optional-dependencies]
ali-oss = [ "oss2" ]
ipython = [ "ipython" ]
sentry-sdk = [ "sentry-sdk" ]

# [[tool.poetry.source]]
# name = "tsinghua"
# url = "http://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple"
# priority = "primary"


[[tool.poetry.source]]
name = "ali"
url = "http://mirrors.aliyun.com/pypi/simple"
priority = "primary"


[tool.isort]
atomic = true
profile = "black"
use_parentheses = true
ensure_newline_before_comments = true


[tool.black]
line-length = 118
target-version = [
    "py311",
]

[tool.ruff]
select = [
    "E",
    "W",
    "F",
    "UP",
    "B",
    "ANN",
    "ASYNC",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "EXE",
    "ISC",
    "ICN",
    "G",
    "PIE",
    "Q",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "TD",
    "PD",
    "PLC",
    "PLE",
    "PLW",
    "FLY",
    "NPY",
]
ignore = [
    "B008",
    "ANN101",
    "ANN102",
    "ANN002",
    "ANN003",
    "F401",
]
fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
unfixable = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "common/tortoise/contrib",
    "storages/relational/migrate/",
    "tests",
]
line-length = 120
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py311"

[tool.ruff.per-file-ignores]

[tool.ruff.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.11"
platform = "darwin"
plugins = [
    "pydantic.mypy",
]
warn_return_any = true
warn_unused_configs = true
exclude = [
    "static",
    "tests",
    "common/tortoise/contrib",
    "storages/relational/migrate/",
]
follow_imports = "silent"
warn_redundant_casts = true
check_untyped_defs = true
no_implicit_reexport = true
ignore_missing_imports = true
show_absolute_path = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.aerich]
tortoise_orm = "storages.relational.migrate.env.TORTOISE_ORM_CONFIG"
location = "storages/relational/migrate"
src_folder = "./."

[poetry.group.dev.dependencies]
pytest-asyncio = "0.21.0"
black = "23.1.0"
isort = "5.12.0"
ruff = "0.0.270"
freezegun = "1.2.1"
httpretty = "1.1.4"
factory-boy = "3.2.1"
hypothesis = "6.74.0"
mimesis = "10.1.0"
mypy = "1.15.0"
